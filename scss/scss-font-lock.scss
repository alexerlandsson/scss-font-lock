/*
 * SCSS Font Lock by @alexerlandsson
 * This is a SCSS mixin used to create CSS locks for responsive typography.
 * The mixin takes px and em as acceptable units
 *
 * For better documentation and implementation guide, check out the GitHub repository:
 * https://github.com/alexerlandsson/css-font-lock
 */

@function sfl-strip-unit($num) {
	@return $num / ($num * 0 + 1);
}

@mixin scss-font-lock($min-size, $max-size, $min-width, $max-width, $base-font-size: 16px) {
	$error: false;

	/* Add variables to a map */
	$var-list: (min-size: $min-size, max-size: $max-size, min-width: $min-width, max-width: $max-width);

	/* Control unit of passed variables */
	@each $key, $val in $var-list {
		@if (unit($val) != px) and (unit($val) != em) {
			@warn "`#{$key}` needs to be set in px or em.";
			$error: true;
		} @else if (unit($val) == em) {
			/* Set max-size in px if set in em */
			$val: (sfl-strip-unit($val) * $base-font-size);
			$var-list: map-merge($var-list, ($key: $val));
		}
	}

	/* Set the new values to the variables */
	$min-size: map-get($var-list, min-size);
	$max-size: map-get($var-list, max-size);
	$min-width: map-get($var-list, min-width);
	$max-width: map-get($var-list, max-width);

	@if ( $error == false ) {
		font-size: $min-size;
		@media (min-width: $min-width) and (max-width: $max-width) {
			$size-increase: sfl-strip-unit($max-size) - sfl-strip-unit($min-size);
			font-size: calc(#{$min-size} + #{$size-increase} * (100vw - #{$min-width}) / (#{sfl-strip-unit($max-width)} - #{sfl-strip-unit($min-width)}));
		}
		@media (min-width: ($max-width + 1px)) {
			font-size: $max-size;
		}
	} @else {
		@warn "There is an error in `@include scss-font-lock();`";
	}
}
